// Mocks generated by Mockito 5.4.6 from annotations
// in task_manager/test/features/task/data/repositories/task_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:task_manager/core/network/network_info.dart' as _i7;
import 'package:task_manager/features/task/data/datasources/task_local_data_source.dart'
    as _i2;
import 'package:task_manager/features/task/data/datasources/task_remote_data_source.dart'
    as _i6;
import 'package:task_manager/features/task/data/models/task_model.dart' as _i5;
import 'package:task_manager/features/task/domain/entities/task.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TaskLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskLocalDataSource extends _i1.Mock
    implements _i2.TaskLocalDataSource {
  MockTaskLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Task>> getTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getTasks, []),
            returnValue: _i3.Future<List<_i4.Task>>.value(<_i4.Task>[]),
          )
          as _i3.Future<List<_i4.Task>>);

  @override
  _i3.Future<void> addTask(_i5.TaskModel? task) =>
      (super.noSuchMethod(
            Invocation.method(#addTask, [task]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cacheTasks(List<_i5.TaskModel>? tasks) =>
      (super.noSuchMethod(
            Invocation.method(#cacheTasks, [tasks]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.TaskModel>> getUnsyncedTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getUnsyncedTasks, []),
            returnValue: _i3.Future<List<_i5.TaskModel>>.value(
              <_i5.TaskModel>[],
            ),
          )
          as _i3.Future<List<_i5.TaskModel>>);

  @override
  _i3.Future<void> markTaskAsSynced(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#markTaskAsSynced, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [TaskRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRemoteDataSource extends _i1.Mock
    implements _i6.TaskRemoteDataSource {
  MockTaskRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> addTask(_i5.TaskModel? task) =>
      (super.noSuchMethod(
            Invocation.method(#addTask, [task]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.TaskModel>> syncTasks() =>
      (super.noSuchMethod(
            Invocation.method(#syncTasks, []),
            returnValue: _i3.Future<List<_i5.TaskModel>>.value(
              <_i5.TaskModel>[],
            ),
          )
          as _i3.Future<List<_i5.TaskModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
